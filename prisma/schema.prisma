// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
   previewFeatures = ["relationJoins"]
  
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Staff {
  Staff_id   Int         @id @default(autoincrement())
  Staff_name String
  Staff_CNIC String      @unique
  Staff_Phone  String            @unique
  Staff_Designation String
  Staff_Address String
  Joining_date DateTime    
  updatedAt DateTime  @default(now()) @updatedAt
  createdAt DateTime @default(now())
}
model Visitor{
  Guest_No Int @id@default(autoincrement())
  Guest_CNIC String  
  Guest_Name String    @default("")
  Vehicle_Plate String  
   User_Id Int
  User Users @relation(fields: [User_Id], references: [User_Id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
model Complain {
  Complain_No Int @id @default(autoincrement())
  Complain String
  Address String
  Phone Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  User_Id Int
  User Users @relation(fields: [User_Id], references: [User_Id])
  Description String 
  status String @default("pending")
}

model Users {
  User_Id Int @id @default(autoincrement())
  Email String @unique
  Phone String @unique
  fname String @default("")
  lname String
  CNIC String @default("")
  password String @default("")
   createdAt DateTime @default(now())
  updatedAt DateTime@default(now()) @updatedAt
  Complain Complain[]
  Event Event[]
  Visitor Visitor[]

}
model Event{
  Event_Id Int @id@default(autoincrement())
  Name String 
  Address String
  Description String
  Date DateTime
  Time DateTime
  User_Id Int
  User Users @relation(fields: [User_Id], references: [User_Id])
  createdAt DateTime @default(now())
  updatedAt DateTime@default(now()) @updatedAt
   Status String @default("pending")

}
model auth{
  Id Int @id@default(autoincrement())
  email String
  password String
  phone_no String
  role String
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime@default(now()) @updatedAt
}
model News{
  Id Int @id@default(autoincrement())
  Title String
  Type String
  createdAt DateTime @default(now())
  updatedAt DateTime@default(now()) @updatedAt

}





